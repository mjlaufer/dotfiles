" Set <space> as the leader key (See `:help mapleader`).
" NOTE: Must happen before plugins are loaded (otherwise wrong leader will be used).
let mapleader=" "

" Plugins  --------------------------------
set surround
set commentary
set which-key
set NERDTree
set functiontextobj
:nmap s <Action>(flash.search)

" Options ---------------------------------
set noerrorbells
set scrolloff=8 " Scroll when cursoer is 8 lines from top or bottom.
set nu " Show current line number.
set relativenumber
set hlsearch
set incsearch " Highlight the currently matched string while searching.
set ignorecase " Ignore casing in search patterns.
set smartcase " Override ignorecase if search pattern contains uppercase.
set ideajoin " Use vim's `J` in IntelliJ

" Maps ------------------------------------

" Change options
:nmap <esc> :nohlsearch<CR>

" Better window navigation
:nmap <C-h> <C-w>h
:nmap <C-j> <C-w>j
:nmap <C-k> <C-w>k
:nmap <C-l> <C-w>l

" NERDTree
:nmap <leader>ee :NERDTreeToggle<CR>
:nmap <leader>ef :NERDTreeFind<CR>

" vim-unimpaired maps
:nmap ]<space> o<Esc>k
:nmap [<space> O<Esc>j
:nmap [b <Action>(PreviousTab)
:nmap ]b <Action>(NextTab)
:nmap [q <Action>(PreviousOccurence)
:nmap ]q <Action>(NextOccurence)
:nmap [m <Action>(MethodUp)
:nmap ]m <Action>(MethodDown)
:nmap [c <Action>(VcsShowPrevChangeMarker)
:nmap ]c <Action>(VcsShowNextChangeMarker)

" [Visual] Move selected lines up/down
:vmap K <Action>(MoveLineUp)
:vmap J <Action>(MoveLineDown)

" [Visual] Stay in indent mode
:vmap < <gv
:vmap > >gv

" Find
:nmap <leader>ff <Action>(GotoFile)
:nmap <leader>fs <Action>(FindInPath)
:nmap <leader>fa <Action>(GotoAction)

" Search
:nmap <leader>/ <Action>(Find)

" Language Server
:nmap <C-w>d <Action>(ShowErrorDescription)
:nmap [d <Action>(GotoPreviousError)
:nmap ]d <Action>(GotoNextError)
:nmap gr <Action>(ShowUsages)
:nmap <leader>aa <Action>(ShowIntentionActions)
:nmap <leader>ar <Action>(RenameElement)

" Terminal
:nmap <leader>tj <Action>(ActivateTerminalToolWindow)
:nmap <leader>tl <Action>(ActivateTerminalToolWindow)
:nmap <leader>tu <Action>(ActivateTerminalToolWindow)

" Compile/Run
:nmap <leader>cc <Action>(CompileDirty)
:nmap <leader>ra <Action>(RunAnything)
:nmap <leader>rc <Action>(RunClass)
:nmap <leader>rq <Action>(Stop)
:nmap <leader>rr <Action>(Run)

" Debug (Inspect)
:nmap <leader>ib <Action>(ToggleLineBreakpoint)
:nmap <leader>ic <Action>(Resume)
:nmap <leader>ij <Action>(StepOver)
:nmap <leader>ik <Action>(StepOut)
:nmap <leader>il <Action>(StepInto)
:nmap <leader>iq <Action>(Stop)
:nmap <leader>is <Action>(Debug)

" Test (Spec)
:nmap <leader>ss <Action>(RerunTests)
:nmap <leader>sf <Action>(RerunFailedTests)

" Git
:nmap <leader>go <Action>(Vcs.Show.Local.Changes)

" Code refactoring
:nmap <leader>rf <Action>(ReformatCode)
:nmap <leader>ri <Action>(OptimizeImports)
:nmap <leader>rl <Action>(Refactorings.QuickListPopupAction)
:nmap <leader>rs <Action>(SurroundWith)
